name: Build on DockerHub and Deploy to AWS
on:
  push:
    branches:
      - main
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
jobs:
  run-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: CI
    - run: npm ci
    - name: Lint
      run: npm run lint
    - name: Build
      run: npm run build --prod
  build:
    runs-on: ubuntu-latest
    needs: run-test
    steps:
      - name: Checkout code
        uses: actions/checkout@3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ./
          push: true
          dockerfile: ./Dockerfile
          tags: christianp93/angular-aws:latest
          build-args: "NODE_ENV=${{ secrets.NODE_ENV }}"
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3
  #   - name: Login to Docker Hub
  #     uses: docker/login-action@v3
  #     with:
  #       username: ${{ env.DOCKERHUB_USERNAME }}
  #       password: ${{ env.DOCKERHUB_TOKEN }}
  #   - name: Set permissions for private key
  #     run: |
  #       echo "${{ env.AWS_PRIVATE_KEY }}" > key.pem
  #       chmod 600 key.pem
  #   - name: Pull Docker image
  #     run: |
  #       ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@54.224.21.192 'sudo docker pull christianp93/express-aws:latest'
  #   - name: Stop running container
  #     run: |
  #       ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@54.224.21.192 'sudo docker stop express-aws || true'
  #       ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@54.224.21.192 'sudo docker rm express-aws || true'
  #   - name: Run new container
  #     run: |
  #       ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@54.224.21.192 'sudo docker run -d --name express-aws -p 80:3000 christianp93/express-aws:latest'
